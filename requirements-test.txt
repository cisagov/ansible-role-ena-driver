--requirement requirements.txt
# With the release of version 2.10, Ansible finally correctly
# identifies Kali Linux as being the Kali distribution of the Debian
# OS family.  This simplifies a lot of things for roles that support
# Kali Linux, so it makes sense to force the installation of Ansible
# 2.10 or newer.
#
# We need at least version 6 to correctly identify Amazon Linux 2023
# as using the dnf package manager, and version 8 is currently the
# oldest supported version.
#
# Version 10 is required because the pip-audit pre-commit hook
# identifies a vulnerability in ansible-core 2.16.13, but all versions
# of ansible 9 have a dependency on ~=2.16.X.
#
# We have tested against version 10.  We want to avoid automatically
# jumping to another major version without testing, since there are
# often breaking changes across major versions.  This is the reason
# for the upper bound.
ansible>=10,<11
# ansible-core 2.16.3 through 2.16.6 suffer from the bug discussed in
# ansible/ansible#82702, which breaks any symlinked files in vars,
# tasks, etc. for any Ansible role installed via ansible-galaxy.
# Hence we never want to install those versions.
#
# Note that the pip-audit pre-commit hook identifies a vulnerability
# in ansible-core 2.16.13.  Normally we would pin ansible-core
# accordingly (>2.16.13), but the above pin of ansible>=10 effectively
# pins ansible-core to >=2.17 so that's what we do here.
#
# Note that any changes made to this dependency must also be made in
# requirements.txt in cisagov/skeleton-packer and
# .pre-commit-config.yaml in cisagov/skeleton-generic.
ansible-core>=2.17
# With the release of molecule v5 there were some breaking changes so
# we need to pin at v5 or newer. However, v5.0.0 had an internal
# dependency issue so we must use the bugfix release as the actual
# lower bound.
molecule>=5.0.1
molecule-plugins[docker]
pre-commit
pytest-testinfra
